T1.cpp
糖果总共有n颗，每颗糖果属于一个种类，而每一个种类有一个独一无二的编号。
我们假设第i颗糖果编号为ai，并且总共会发生m个事件：
事件1：你吃掉了一颗糖果
事件2：询问现在某种糖果有多少颗。
输入输出格式
输入格式：
第一行是两个整数n,m意义如题面所述。
接下来一行是n个正整数，第i个数表示ai
接下来m行，每行两个数opt和x
如果opt = 1 表示发生的是事件1，此时x表示吃掉了一颗编号为x的糖果。
如果opt = 2 表示发生的是事件2，此时x表示在问你编号为x的糖果有几颗。
输出格式：
若干行，对于每一次事件2，请输出一个数表示答案。
输入输出样例
输入样例#1：
5 2
1 2 3 4 2
1 1
2 2
输出样例#1：
2
说明
n≤ 1000
m≤ 1000
ai≤ 1000
询问的糖果可能不存在，此时应当输出0

T3.CPP
妹妹非常的可爱，而且会有的时候会很挑食。比如晚餐，有的妹妹只吃素食，还有的只爱吃荤菜，当
然也有对此感到无所谓的。
现在已知有a个妹妹只爱吃素菜，有b个妹妹只吃荤菜，还有c个妹妹二者都能接受，
你要为她们买晚饭。
商店共提供m种菜，并且规定每种菜只能买一次。
每一种菜有一个价格ci，以及一个种类，表示是荤菜还是素菜。
现在想要喂饱尽可能多的妹妹，并且希望尽可能的减少花费。
请你告诉他他最多能喂饱多少个妹妹，以及至少要花费多少钱。
输入输出格式
输入格式：
第一行三个整数a b c
接下来一行是一个整数m
接下来m行，每行表示食品的价值ci和类别(A表示素菜，B表示荤菜)。
输出格式：
两个数，分别表示能够喂饱的御坂妹妹数量以及花费的总价值。
输入样例#1：
2 1 1
4
5 A
6 B
3 B
7 B
输出样例#1：
3 14
说明
对于10%的数据，a=b=0
对于30%的数据，1<=a,b,c,m<=100
对于100%的数据，1<=a,b,c<=100000 1<=m<=300000
所有ci<=10^9

T4.CPP
给你一个无向图，让你找到一个路径，路上的点是依次增大的，点的个数记为len
然后找到所有连接到这条路末尾节点的边，数量为num
找到最大的num * len
输入输出格式
输入格式：
第1行两个整数n，m。
第2―m+1行，每行两个整数u，v，表示编号为u，v点之间有一条边。
输出格式：
答案
输入样例#1：
8 6
4 5
3 5
2 5
1 2
2 8
6 7
输出样例#1：
9
样例解释
选路径1-2-5
5和三个点（2,3,4）相连
所以3*3=9,是最大的方案
对于10%的数据，是一个完全图。
对于另外20%的数据 1 ≤n,m≤ 150
其中有一个点是一条链。
对于另外20%的数据， 1 ≤n≤ 10000
对于100%的数据，满足 1 ≤n≤ 200000 1 ≤m≤ 400000 

path.cpp
给定一个 n 个点 m 条边的有向图，有 k 个标记点，要求从规定的起点按任意顺序经过所有标记点到达规
定的终点，问最短的距离是多少。
Input
第一行 5 个整数 n、 m、 k、 s、 t，表示点个数、边条数、标记点个数、起点编号、终点编号。
接下来 m 行每行 3 个整数 x、 y、 z，表示有一条从 x 到 y 的长为 z 的有向边。
接下来 k 行每行一个整数表示标记点编号。
Output
输出一个整数，表示最短距离，若没有方案可行输出-1。
Sample Input
3 3 2 1 1
1 2 1
2 3 1
3 1 1
2 3
Sample Output
3
【样例解释】
路径为 1->2->3->1。
Data Constraint
20%的数据 n<=10。
50%的数据 n<=1000。
另有 20%的数据 k=0。
100%的数据 n<=50000， m<=100000， 0<=k<=10， 1<=z<=5000。












